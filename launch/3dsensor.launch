<!-- -->
<launch>
  <!-- TF frames -->
  <arg name="rgb_frame_id"   default="rgb_camera_link_optical" />
  <arg name="depth_frame_id" default="depth_camera_link_optical" />

  <arg name="pi/2" value="1.5707963267948966" />
  <arg name="optical_rotate" value="0 0 0 -$(arg pi/2) 0 -$(arg pi/2)" />
  <node pkg="tf" type="static_transform_publisher" name="camera_base_link1" args="$(arg optical_rotate) rgb_camera_link $(arg rgb_frame_id) 20" />  
  <node pkg="tf" type="static_transform_publisher" name="camera_base_link2" args="$(arg optical_rotate) depth_camera_link $(arg depth_frame_id) 20" />
  
  <!--  identify the device.-->
  <arg name="camera"      default="camera"/>
  <arg name="publish_tf"  default="false"/>
  
  <!--  provide calibration files -->
  <!--
  <arg name="rgb_camera_info_url"   default="file://$(find ranger_extra)/launch/calibration/rgb_PS1080_PrimeSense.yaml" />
  <arg name="depth_camera_info_url" default="file://$(find ranger_extra)/launch/calibration/depth_PS1080_PrimeSense.yaml" />
  -->
  <arg name="rgb_camera_info_url"   default="" />
  <arg name="depth_camera_info_url" default="" />
  <!-- Factory-calibrated depth registration -->
  <arg name="depth_registration"              default="true"/>
  <arg     if="$(arg depth_registration)" name="depth" value="depth_registered" />
  <arg unless="$(arg depth_registration)" name="depth" value="depth" />

  <!-- Processing Modules -->
  <arg name="rgb_processing"                  default="true"/>                                      
  <arg name="ir_processing"                   default="false"/>                                      
  <arg name="depth_processing"                default="true"/>                                      
  <arg name="depth_registered_processing"     default="true"/>                                      
  <arg name="disparity_processing"            default="false"/>                                      
  <arg name="disparity_registered_processing" default="false"/>                                      
                                                                                                    
  <!-- Worker threads for the nodelet manager -->                                                   
  <arg name="num_worker_threads" default="4" />                                                     

  <include file="$(find openni2_launch)/launch/openni2.launch">
    <arg name="rgb_camera_info_url"   			value="$(arg rgb_camera_info_url)"/>
	<arg name="depth_camera_info_url"   		value="$(arg depth_camera_info_url)"/>
    <arg name="camera"                          value="$(arg camera)"/>                             
    <arg name="publish_tf"                      value="$(arg publish_tf)"/>                         
    <arg name="depth_registration"              value="$(arg depth_registration)"/>                 
    <arg name="num_worker_threads"              value="$(arg num_worker_threads)" />
	<arg name="rgb_frame_id"                    value="$(arg rgb_frame_id)" />
	<arg name="depth_frame_id"                  value="$(arg depth_frame_id)" />         
                                                                                                    
    <!-- Processing Modules -->                                                                     
    <arg name="rgb_processing"                  value="$(arg rgb_processing)"/>                     
    <arg name="ir_processing"                   value="$(arg ir_processing)"/>                      
    <arg name="depth_processing"                value="$(arg depth_processing)"/>                   
    <arg name="depth_registered_processing"     value="$(arg depth_registered_processing)"/>        
    <arg name="disparity_processing"            value="$(arg disparity_processing)"/>               
    <arg name="disparity_registered_processing" value="$(arg disparity_registered_processing)"/>    
  </include>  
  
  
  <!-- Laserscan -->
  <group ns="$(arg camera)">
	<node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan_loader" args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet $(arg camera)_nodelet_manager">
		<param name="scan_height" value="70"/>
		<param name="output_frame_id" value="/depth_camera_link"/>
		<param name="range_min" value="0.4"/>
		<remap from="image" to="$(arg depth)/image_raw"/>
		<remap from="scan" to="/scan"/>
	</node>
  </group>
  
</launch>
